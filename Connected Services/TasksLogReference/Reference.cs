//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TasksLogReference
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", ConfigurationName="TasksLogReference.Task_Logs_ARGGOBEST_Port")]
    public interface Task_Logs_ARGGOBEST_Port
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/task_logs_arggobest:Read", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<TasksLogReference.Read_Result> ReadAsync(TasksLogReference.Read request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/task_logs_arggobest:ReadByRecId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<TasksLogReference.ReadByRecId_Result> ReadByRecIdAsync(TasksLogReference.ReadByRecId request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/task_logs_arggobest:ReadMultiple", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<TasksLogReference.ReadMultiple_Result> ReadMultipleAsync(TasksLogReference.ReadMultiple request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/task_logs_arggobest:IsUpdated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<TasksLogReference.IsUpdated_Result> IsUpdatedAsync(TasksLogReference.IsUpdated request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/task_logs_arggobest:GetRecIdFromKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<TasksLogReference.GetRecIdFromKey_Result> GetRecIdFromKeyAsync(TasksLogReference.GetRecIdFromKey request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/task_logs_arggobest:Create", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<TasksLogReference.Create_Result> CreateAsync(TasksLogReference.Create request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/task_logs_arggobest:CreateMultiple", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<TasksLogReference.CreateMultiple_Result> CreateMultipleAsync(TasksLogReference.CreateMultiple request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/task_logs_arggobest:Update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<TasksLogReference.Update_Result> UpdateAsync(TasksLogReference.Update request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/task_logs_arggobest:UpdateMultiple", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<TasksLogReference.UpdateMultiple_Result> UpdateMultipleAsync(TasksLogReference.UpdateMultiple request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/page/task_logs_arggobest:Delete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<TasksLogReference.Delete_Result> DeleteAsync(TasksLogReference.Delete request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest")]
    public partial class Task_Logs_ARGGOBEST
    {
        
        private string keyField;
        
        private int task_Log_IDField;
        
        private bool task_Log_IDFieldSpecified;
        
        private int task_IDField;
        
        private bool task_IDFieldSpecified;
        
        private int user_IDField;
        
        private bool user_IDFieldSpecified;
        
        private string task_Log_TitleField;
        
        private string task_Log_DescriptionField;
        
        private Task_Status task_StatusField;
        
        private bool task_StatusFieldSpecified;
        
        private bool log_Visible_to_CustomerField;
        
        private bool log_Visible_to_CustomerFieldSpecified;
        
        private Task_Log_Type task_Log_TypeField;
        
        private bool task_Log_TypeFieldSpecified;
        
        private decimal actual_HoursField;
        
        private bool actual_HoursFieldSpecified;
        
        private System.DateTime log_DateField;
        
        private bool log_DateFieldSpecified;
        
        private Current_Task_Type current_Task_TypeField;
        
        private bool current_Task_TypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Task_Log_ID
        {
            get
            {
                return this.task_Log_IDField;
            }
            set
            {
                this.task_Log_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Task_Log_IDSpecified
        {
            get
            {
                return this.task_Log_IDFieldSpecified;
            }
            set
            {
                this.task_Log_IDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Task_ID
        {
            get
            {
                return this.task_IDField;
            }
            set
            {
                this.task_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Task_IDSpecified
        {
            get
            {
                return this.task_IDFieldSpecified;
            }
            set
            {
                this.task_IDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int User_ID
        {
            get
            {
                return this.user_IDField;
            }
            set
            {
                this.user_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool User_IDSpecified
        {
            get
            {
                return this.user_IDFieldSpecified;
            }
            set
            {
                this.user_IDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Task_Log_Title
        {
            get
            {
                return this.task_Log_TitleField;
            }
            set
            {
                this.task_Log_TitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Task_Log_Description
        {
            get
            {
                return this.task_Log_DescriptionField;
            }
            set
            {
                this.task_Log_DescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public Task_Status Task_Status
        {
            get
            {
                return this.task_StatusField;
            }
            set
            {
                this.task_StatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Task_StatusSpecified
        {
            get
            {
                return this.task_StatusFieldSpecified;
            }
            set
            {
                this.task_StatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool Log_Visible_to_Customer
        {
            get
            {
                return this.log_Visible_to_CustomerField;
            }
            set
            {
                this.log_Visible_to_CustomerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Log_Visible_to_CustomerSpecified
        {
            get
            {
                return this.log_Visible_to_CustomerFieldSpecified;
            }
            set
            {
                this.log_Visible_to_CustomerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public Task_Log_Type Task_Log_Type
        {
            get
            {
                return this.task_Log_TypeField;
            }
            set
            {
                this.task_Log_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Task_Log_TypeSpecified
        {
            get
            {
                return this.task_Log_TypeFieldSpecified;
            }
            set
            {
                this.task_Log_TypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public decimal Actual_Hours
        {
            get
            {
                return this.actual_HoursField;
            }
            set
            {
                this.actual_HoursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Actual_HoursSpecified
        {
            get
            {
                return this.actual_HoursFieldSpecified;
            }
            set
            {
                this.actual_HoursFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", Order=10)]
        public System.DateTime Log_Date
        {
            get
            {
                return this.log_DateField;
            }
            set
            {
                this.log_DateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Log_DateSpecified
        {
            get
            {
                return this.log_DateFieldSpecified;
            }
            set
            {
                this.log_DateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public Current_Task_Type Current_Task_Type
        {
            get
            {
                return this.current_Task_TypeField;
            }
            set
            {
                this.current_Task_TypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Current_Task_TypeSpecified
        {
            get
            {
                return this.current_Task_TypeFieldSpecified;
            }
            set
            {
                this.current_Task_TypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest")]
    public enum Task_Status
    {
        
        /// <remarks/>
        New,
        
        /// <remarks/>
        Assigned,
        
        /// <remarks/>
        Resolved,
        
        /// <remarks/>
        Closed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest")]
    public enum Task_Log_Type
    {
        
        /// <remarks/>
        Analysis,
        
        /// <remarks/>
        Design,
        
        /// <remarks/>
        Development,
        
        /// <remarks/>
        Testing,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest")]
    public enum Current_Task_Type
    {
        
        /// <remarks/>
        Bug,
        
        /// <remarks/>
        Change_Request,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest")]
    public partial class Task_Logs_ARGGOBEST_Filter
    {
        
        private Task_Logs_ARGGOBEST_Fields fieldField;
        
        private string criteriaField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Task_Logs_ARGGOBEST_Fields Field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Criteria
        {
            get
            {
                return this.criteriaField;
            }
            set
            {
                this.criteriaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest")]
    public enum Task_Logs_ARGGOBEST_Fields
    {
        
        /// <remarks/>
        Task_Log_ID,
        
        /// <remarks/>
        Task_ID,
        
        /// <remarks/>
        User_ID,
        
        /// <remarks/>
        Task_Log_Title,
        
        /// <remarks/>
        Task_Log_Description,
        
        /// <remarks/>
        Task_Status,
        
        /// <remarks/>
        Log_Visible_to_Customer,
        
        /// <remarks/>
        Task_Log_Type,
        
        /// <remarks/>
        Actual_Hours,
        
        /// <remarks/>
        Log_Date,
        
        /// <remarks/>
        Current_Task_Type,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Read", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class Read
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        public int Task_Log_ID;
        
        public Read()
        {
        }
        
        public Read(int Task_Log_ID)
        {
            this.Task_Log_ID = Task_Log_ID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Read_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class Read_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        public TasksLogReference.Task_Logs_ARGGOBEST Task_Logs_ARGGOBEST;
        
        public Read_Result()
        {
        }
        
        public Read_Result(TasksLogReference.Task_Logs_ARGGOBEST Task_Logs_ARGGOBEST)
        {
            this.Task_Logs_ARGGOBEST = Task_Logs_ARGGOBEST;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReadByRecId", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class ReadByRecId
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        public string recId;
        
        public ReadByRecId()
        {
        }
        
        public ReadByRecId(string recId)
        {
            this.recId = recId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReadByRecId_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class ReadByRecId_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        public TasksLogReference.Task_Logs_ARGGOBEST Task_Logs_ARGGOBEST;
        
        public ReadByRecId_Result()
        {
        }
        
        public ReadByRecId_Result(TasksLogReference.Task_Logs_ARGGOBEST Task_Logs_ARGGOBEST)
        {
            this.Task_Logs_ARGGOBEST = Task_Logs_ARGGOBEST;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReadMultiple", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class ReadMultiple
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("filter")]
        public TasksLogReference.Task_Logs_ARGGOBEST_Filter[] filter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=1)]
        public string bookmarkKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=2)]
        public int setSize;
        
        public ReadMultiple()
        {
        }
        
        public ReadMultiple(TasksLogReference.Task_Logs_ARGGOBEST_Filter[] filter, string bookmarkKey, int setSize)
        {
            this.filter = filter;
            this.bookmarkKey = bookmarkKey;
            this.setSize = setSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReadMultiple_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class ReadMultiple_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReadMultiple_Result", Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TasksLogReference.Task_Logs_ARGGOBEST[] ReadMultiple_Result1;
        
        public ReadMultiple_Result()
        {
        }
        
        public ReadMultiple_Result(TasksLogReference.Task_Logs_ARGGOBEST[] ReadMultiple_Result1)
        {
            this.ReadMultiple_Result1 = ReadMultiple_Result1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsUpdated", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class IsUpdated
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        public string Key;
        
        public IsUpdated()
        {
        }
        
        public IsUpdated(string Key)
        {
            this.Key = Key;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsUpdated_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class IsUpdated_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IsUpdated_Result", Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        public bool IsUpdated_Result1;
        
        public IsUpdated_Result()
        {
        }
        
        public IsUpdated_Result(bool IsUpdated_Result1)
        {
            this.IsUpdated_Result1 = IsUpdated_Result1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRecIdFromKey", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class GetRecIdFromKey
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        public string Key;
        
        public GetRecIdFromKey()
        {
        }
        
        public GetRecIdFromKey(string Key)
        {
            this.Key = Key;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRecIdFromKey_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class GetRecIdFromKey_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetRecIdFromKey_Result", Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        public string GetRecIdFromKey_Result1;
        
        public GetRecIdFromKey_Result()
        {
        }
        
        public GetRecIdFromKey_Result(string GetRecIdFromKey_Result1)
        {
            this.GetRecIdFromKey_Result1 = GetRecIdFromKey_Result1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Create", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class Create
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        public TasksLogReference.Task_Logs_ARGGOBEST Task_Logs_ARGGOBEST;
        
        public Create()
        {
        }
        
        public Create(TasksLogReference.Task_Logs_ARGGOBEST Task_Logs_ARGGOBEST)
        {
            this.Task_Logs_ARGGOBEST = Task_Logs_ARGGOBEST;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Create_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class Create_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        public TasksLogReference.Task_Logs_ARGGOBEST Task_Logs_ARGGOBEST;
        
        public Create_Result()
        {
        }
        
        public Create_Result(TasksLogReference.Task_Logs_ARGGOBEST Task_Logs_ARGGOBEST)
        {
            this.Task_Logs_ARGGOBEST = Task_Logs_ARGGOBEST;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateMultiple", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class CreateMultiple
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TasksLogReference.Task_Logs_ARGGOBEST[] Task_Logs_ARGGOBEST_List;
        
        public CreateMultiple()
        {
        }
        
        public CreateMultiple(TasksLogReference.Task_Logs_ARGGOBEST[] Task_Logs_ARGGOBEST_List)
        {
            this.Task_Logs_ARGGOBEST_List = Task_Logs_ARGGOBEST_List;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateMultiple_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class CreateMultiple_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TasksLogReference.Task_Logs_ARGGOBEST[] Task_Logs_ARGGOBEST_List;
        
        public CreateMultiple_Result()
        {
        }
        
        public CreateMultiple_Result(TasksLogReference.Task_Logs_ARGGOBEST[] Task_Logs_ARGGOBEST_List)
        {
            this.Task_Logs_ARGGOBEST_List = Task_Logs_ARGGOBEST_List;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class Update
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        public TasksLogReference.Task_Logs_ARGGOBEST Task_Logs_ARGGOBEST;
        
        public Update()
        {
        }
        
        public Update(TasksLogReference.Task_Logs_ARGGOBEST Task_Logs_ARGGOBEST)
        {
            this.Task_Logs_ARGGOBEST = Task_Logs_ARGGOBEST;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class Update_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        public TasksLogReference.Task_Logs_ARGGOBEST Task_Logs_ARGGOBEST;
        
        public Update_Result()
        {
        }
        
        public Update_Result(TasksLogReference.Task_Logs_ARGGOBEST Task_Logs_ARGGOBEST)
        {
            this.Task_Logs_ARGGOBEST = Task_Logs_ARGGOBEST;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMultiple", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class UpdateMultiple
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TasksLogReference.Task_Logs_ARGGOBEST[] Task_Logs_ARGGOBEST_List;
        
        public UpdateMultiple()
        {
        }
        
        public UpdateMultiple(TasksLogReference.Task_Logs_ARGGOBEST[] Task_Logs_ARGGOBEST_List)
        {
            this.Task_Logs_ARGGOBEST_List = Task_Logs_ARGGOBEST_List;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMultiple_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class UpdateMultiple_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TasksLogReference.Task_Logs_ARGGOBEST[] Task_Logs_ARGGOBEST_List;
        
        public UpdateMultiple_Result()
        {
        }
        
        public UpdateMultiple_Result(TasksLogReference.Task_Logs_ARGGOBEST[] Task_Logs_ARGGOBEST_List)
        {
            this.Task_Logs_ARGGOBEST_List = Task_Logs_ARGGOBEST_List;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Delete", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class Delete
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        public string Key;
        
        public Delete()
        {
        }
        
        public Delete(string Key)
        {
            this.Key = Key;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Delete_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", IsWrapped=true)]
    public partial class Delete_Result
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Delete_Result", Namespace="urn:microsoft-dynamics-schemas/page/task_logs_arggobest", Order=0)]
        public bool Delete_Result1;
        
        public Delete_Result()
        {
        }
        
        public Delete_Result(bool Delete_Result1)
        {
            this.Delete_Result1 = Delete_Result1;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface Task_Logs_ARGGOBEST_PortChannel : TasksLogReference.Task_Logs_ARGGOBEST_Port, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class Task_Logs_ARGGOBEST_PortClient : System.ServiceModel.ClientBase<TasksLogReference.Task_Logs_ARGGOBEST_Port>, TasksLogReference.Task_Logs_ARGGOBEST_Port
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public Task_Logs_ARGGOBEST_PortClient() : 
                base(Task_Logs_ARGGOBEST_PortClient.GetDefaultBinding(), Task_Logs_ARGGOBEST_PortClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.Task_Logs_ARGGOBEST_Port.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Task_Logs_ARGGOBEST_PortClient(EndpointConfiguration endpointConfiguration) : 
                base(Task_Logs_ARGGOBEST_PortClient.GetBindingForEndpoint(endpointConfiguration), Task_Logs_ARGGOBEST_PortClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Task_Logs_ARGGOBEST_PortClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Task_Logs_ARGGOBEST_PortClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Task_Logs_ARGGOBEST_PortClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Task_Logs_ARGGOBEST_PortClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Task_Logs_ARGGOBEST_PortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TasksLogReference.Read_Result> TasksLogReference.Task_Logs_ARGGOBEST_Port.ReadAsync(TasksLogReference.Read request)
        {
            return base.Channel.ReadAsync(request);
        }
        
        public System.Threading.Tasks.Task<TasksLogReference.Read_Result> ReadAsync(int Task_Log_ID)
        {
            TasksLogReference.Read inValue = new TasksLogReference.Read();
            inValue.Task_Log_ID = Task_Log_ID;
            return ((TasksLogReference.Task_Logs_ARGGOBEST_Port)(this)).ReadAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TasksLogReference.ReadByRecId_Result> TasksLogReference.Task_Logs_ARGGOBEST_Port.ReadByRecIdAsync(TasksLogReference.ReadByRecId request)
        {
            return base.Channel.ReadByRecIdAsync(request);
        }
        
        public System.Threading.Tasks.Task<TasksLogReference.ReadByRecId_Result> ReadByRecIdAsync(string recId)
        {
            TasksLogReference.ReadByRecId inValue = new TasksLogReference.ReadByRecId();
            inValue.recId = recId;
            return ((TasksLogReference.Task_Logs_ARGGOBEST_Port)(this)).ReadByRecIdAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TasksLogReference.ReadMultiple_Result> TasksLogReference.Task_Logs_ARGGOBEST_Port.ReadMultipleAsync(TasksLogReference.ReadMultiple request)
        {
            return base.Channel.ReadMultipleAsync(request);
        }
        
        public System.Threading.Tasks.Task<TasksLogReference.ReadMultiple_Result> ReadMultipleAsync(TasksLogReference.Task_Logs_ARGGOBEST_Filter[] filter, string bookmarkKey, int setSize)
        {
            TasksLogReference.ReadMultiple inValue = new TasksLogReference.ReadMultiple();
            inValue.filter = filter;
            inValue.bookmarkKey = bookmarkKey;
            inValue.setSize = setSize;
            return ((TasksLogReference.Task_Logs_ARGGOBEST_Port)(this)).ReadMultipleAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TasksLogReference.IsUpdated_Result> TasksLogReference.Task_Logs_ARGGOBEST_Port.IsUpdatedAsync(TasksLogReference.IsUpdated request)
        {
            return base.Channel.IsUpdatedAsync(request);
        }
        
        public System.Threading.Tasks.Task<TasksLogReference.IsUpdated_Result> IsUpdatedAsync(string Key)
        {
            TasksLogReference.IsUpdated inValue = new TasksLogReference.IsUpdated();
            inValue.Key = Key;
            return ((TasksLogReference.Task_Logs_ARGGOBEST_Port)(this)).IsUpdatedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TasksLogReference.GetRecIdFromKey_Result> TasksLogReference.Task_Logs_ARGGOBEST_Port.GetRecIdFromKeyAsync(TasksLogReference.GetRecIdFromKey request)
        {
            return base.Channel.GetRecIdFromKeyAsync(request);
        }
        
        public System.Threading.Tasks.Task<TasksLogReference.GetRecIdFromKey_Result> GetRecIdFromKeyAsync(string Key)
        {
            TasksLogReference.GetRecIdFromKey inValue = new TasksLogReference.GetRecIdFromKey();
            inValue.Key = Key;
            return ((TasksLogReference.Task_Logs_ARGGOBEST_Port)(this)).GetRecIdFromKeyAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<TasksLogReference.Create_Result> CreateAsync(TasksLogReference.Create request)
        {
            return base.Channel.CreateAsync(request);
        }
        
        public System.Threading.Tasks.Task<TasksLogReference.CreateMultiple_Result> CreateMultipleAsync(TasksLogReference.CreateMultiple request)
        {
            return base.Channel.CreateMultipleAsync(request);
        }
        
        public System.Threading.Tasks.Task<TasksLogReference.Update_Result> UpdateAsync(TasksLogReference.Update request)
        {
            return base.Channel.UpdateAsync(request);
        }
        
        public System.Threading.Tasks.Task<TasksLogReference.UpdateMultiple_Result> UpdateMultipleAsync(TasksLogReference.UpdateMultiple request)
        {
            return base.Channel.UpdateMultipleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TasksLogReference.Delete_Result> TasksLogReference.Task_Logs_ARGGOBEST_Port.DeleteAsync(TasksLogReference.Delete request)
        {
            return base.Channel.DeleteAsync(request);
        }
        
        public System.Threading.Tasks.Task<TasksLogReference.Delete_Result> DeleteAsync(string Key)
        {
            TasksLogReference.Delete inValue = new TasksLogReference.Delete();
            inValue.Key = Key;
            return ((TasksLogReference.Task_Logs_ARGGOBEST_Port)(this)).DeleteAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.Task_Logs_ARGGOBEST_Port))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.Task_Logs_ARGGOBEST_Port))
            {
                return new System.ServiceModel.EndpointAddress("http://nav2018.arggo.consulting:7052/ARGGOBEST/WS/Cronus03/Page/Task_Logs_ARGGOBE" +
                        "ST?wsdl");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return Task_Logs_ARGGOBEST_PortClient.GetBindingForEndpoint(EndpointConfiguration.Task_Logs_ARGGOBEST_Port);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return Task_Logs_ARGGOBEST_PortClient.GetEndpointAddress(EndpointConfiguration.Task_Logs_ARGGOBEST_Port);
        }
        
        public enum EndpointConfiguration
        {
            
            Task_Logs_ARGGOBEST_Port,
        }
    }
}
